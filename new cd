import pandas as pd
from pathlib import Path

def process_folder(folder_path):
    all_data = []
    
    for file_path in Path(folder_path).glob('*.xlsx'):
        filename = file_path.name
        if filename.startswith('SEIU 73'):
            # Process SEIU 73 files
            try:
                df = pd.read_excel(file_path, sheet_name=0, header=None, nrows=14)
                df = df.fillna('')
                rows = df.values.tolist()
            except Exception as e:
                continue
            
            current_grade = None
            annual_data = {}
            
            for row in rows:
                if len(row) == 0:
                    continue
                grade_cell = str(row[0]).strip()
                if grade_cell not in ['', 'nan']:
                    current_grade = grade_cell
                    annual_data[current_grade] = []
                else:
                    if current_grade is None:
                        continue
                    row_type = str(row[1]).strip().lower() if len(row) > 1 else ''
                    if 'annual' in row_type:
                        annual_values = [v for v in row[2:] if v != '']
                        annual_values = pd.to_numeric(annual_values, errors='coerce').tolist()
                        annual_values = [v for v in annual_values if not pd.isna(v)]
                        if annual_values:
                            annual_data[current_grade] = annual_values
            
            for grade, values in annual_data.items():
                if values:
                    min_rate = int(values[0])
                    max_rate = int(values[-1])
                    all_data.append({
                        'Grade': grade,
                        'min rate': min_rate,
                        'max rate': max_rate,
                        'category': filename
                    })
        else:
            # Process other files
            try:
                df = pd.read_excel(file_path, sheet_name='DP1-DP3 2023')
            except ValueError:
                continue  # Skip if sheet not found
            except Exception as e:
                continue
            
            if 'NEW GRADE' not in df.columns or 'ANNUAL' not in df.columns:
                continue
            
            df['ANNUAL'] = pd.to_numeric(df['ANNUAL'], errors='coerce')
            grouped = df.groupby('NEW GRADE')['ANNUAL'].agg(['min', 'max'])
            for grade, data in grouped.iterrows():
                all_data.append({
                    'Grade': grade,
                    'min rate': int(data['min']),
                    'max rate': int(data['max']),
                    'category': filename
                })
    
    result_df = pd.DataFrame(all_data, columns=['Grade', 'min rate', 'max rate', 'category'])
    return result_df
